apply plugin: 'com.android.application'
apply plugin: 'com.google.gms.google-services'

android {
    compileSdk 32

    // Read sensitive keys from gradle.properties or environment variables
    def movieDbApiKey = project.findProperty('MOVIE_DB_API_KEY') ?: System.getenv('MOVIE_DB_API_KEY') ?: ""
    def facebookAppId = project.findProperty('FACEBOOK_APP_ID') ?: System.getenv('FACEBOOK_APP_ID') ?: ""
    def facebookClientToken = project.findProperty('FACEBOOK_CLIENT_TOKEN') ?: System.getenv('FACEBOOK_CLIENT_TOKEN') ?: ""
    def firebaseDatabaseUrl = project.findProperty('FIREBASE_DATABASE_URL') ?: System.getenv('FIREBASE_DATABASE_URL') ?: ""

    defaultConfig {
        applicationId "com.example.aplicacion"
        minSdk 21
        targetSdk 32
        versionCode 2
        versionName "1.1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        // Expose tokens to the app at build time
        buildConfigField "String", "MOVIE_DB_API_KEY", "\"${movieDbApiKey}\""
        buildConfigField "String", "FIREBASE_DATABASE_URL", "\"${firebaseDatabaseUrl}\""
        resValue "string", "facebook_app_id", facebookAppId
        resValue "string", "fb_login_protocol_scheme", "fb${facebookAppId}"
        resValue "string", "facebook_client_token", facebookClientToken
    }

    buildTypes {
        release {
            // Temporarily disabled for dev environment without full SDK
            // TODO: Re-enable for production builds with minifyEnabled true
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            
            // Disable debug features in release
            debuggable false
            jniDebuggable false
            renderscriptDebuggable false
            
            // Enable PNG crunching
            crunchPngs true
        }
        debug {
            minifyEnabled false
            debuggable true
            
            // Enable test coverage
            testCoverageEnabled true
            
            // Application ID suffix for debug
            applicationIdSuffix ".debug"
            versionNameSuffix "-debug"
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    buildFeatures {
        viewBinding true
    }
}

dependencies {

    implementation 'androidx.room:room-common:2.3.0'
    implementation 'androidx.room:room-ktx:2.3.0'
    def lifecycle_version="2.2.0";


    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'com.google.android.material:material:1.5.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'
    implementation 'com.google.firebase:firebase-auth:21.0.3'
    implementation 'com.google.firebase:firebase-database:20.0.4'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.4.1'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.4.1'
    implementation 'androidx.navigation:navigation-fragment:2.4.1'
    implementation 'androidx.navigation:navigation-ui:2.4.1'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    implementation 'com.google.firebase:firebase-auth'
    implementation 'com.google.firebase:firebase-firestore:24.1.2'


    //Retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'


    // Firebase Google Dependencies

    implementation 'com.google.android.gms:play-services-auth:20.1.0'
    implementation platform('com.google.firebase:firebase-bom:29.3.0')

    // Facebook Dependencies
    implementation 'com.facebook.android:facebook-android-sdk:[8,9)'

    // View Model
    implementation "androidx.lifecycle:lifecycle-viewmodel:$lifecycle_version"
    // Live Data
    implementation "androidx.lifecycle:lifecycle-livedata:$lifecycle_version"
    //Glide
    implementation 'com.github.bumptech.glide:glide:4.13.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.13.0'


    // Card Views
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'androidx.recyclerview:recyclerview:1.1.0'


}

// --- Seguridad: verificar existencia de google-services.json ---
import org.gradle.api.GradleException

tasks.register("verifyGoogleServices") {
    doLast {
        def f = file("$projectDir/google-services.json")
        if (!f.exists()) {
            throw new GradleException("Falta app/google-services.json. Descárgalo desde Firebase y colócalo localmente (no se versiona).")
        }
    }
}
preBuild.dependsOn("verifyGoogleServices")
// ---------------------------------------------------------------